const logger = require('../../../shared/logger/logger');
const fs = require('fs');

class WhereEatCallback {
    async handle(callbackQuery, bot) {
        try {
            const chatId = callbackQuery.message.chat.id;
            const messageId = callbackQuery.message.message_id;

            logger.info('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é callback where_eat');
            
            const whereEatMessage = `
üçΩÔ∏è –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ?

–£ –Ω–∞—Å –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—Ç–ª–∏—á–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –≤–∫—É—Å–Ω–æ–≥–æ –æ–±–µ–¥–∞ –∏–ª–∏ —É–∂–∏–Ω–∞:
‚Ä¢ –†–µ—Å—Ç–æ—Ä–∞–Ω—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º –Ω–∞ –í–æ–ª–≥—É
‚Ä¢ –£—é—Ç–Ω—ã–µ –∫–∞—Ñ–µ –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ
‚Ä¢ –°—Ç–∏–ª—å–Ω—ã–µ –±–∞—Ä—ã –∏ –ø–∞–±—ã
‚Ä¢ –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ä—É—Å—Å–∫–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã

–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ!
            `;

            try {
                logger.info('–û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–æ—Ç–æ where_eat.jpeg');
                
                await bot.sendPhoto(chatId, fs.createReadStream('./static/images/where_eat.jpeg'), {
                    caption: whereEatMessage,
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: 'üçï –ü–∏—Ü—Ü–∞ –∏ –ø–∞—Å—Ç–∞',
                                    callback_data: 'food_pizza'
                                },
                                {
                                    text: 'ü•© –°—Ç–µ–π–∫–∏ –∏ –º—è—Å–æ',
                                    callback_data: 'food_steak'
                                }
                            ]
                        ]
                    }
                });

                logger.info('–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

                // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                await bot.editMessageReplyMarkup({
                    inline_keyboard: []
                }, {
                    chat_id: chatId,
                    message_id: messageId
                });

                logger.info('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É–±—Ä–∞–Ω–∞');

            } catch (photoError) {
                logger.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: ${photoError.message}`);
                
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.sendMessage(chatId, whereEatMessage, {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: 'üçï –ü–∏—Ü—Ü–∞ –∏ –ø–∞—Å—Ç–∞',
                                    callback_data: 'food_pizza'
                                },
                                {
                                    text: 'ü•© –°—Ç–µ–π–∫–∏ –∏ –º—è—Å–æ',
                                    callback_data: 'food_steak'
                                }
                            ]
                        ]
                    }
                });
            }

        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ where_eat callback: ${error.message}`);
            throw error;
        }
    }
}

module.exports = WhereEatCallback; 
const logger = require('../../logger');

class MessageHandler {
    constructor(gigaChatService) {
        this.gigaChatService = gigaChatService;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    async handleStart(msg, bot) {
        const chatId = msg.chat.id;
        const userName = msg.from.first_name;
        
        logger.start(userName);
        
        const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã\n\n–Ø —É–º–Ω—ã–π Telegram –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π GigaChat AI.\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–≤–µ—á—É —Å –ø–æ–º–æ—â—å—é –ò–ò! ÔøΩÔøΩ`;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—á–∏—â–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.sendMessage(chatId, welcomeMessage, {
            reply_markup: {
                remove_keyboard: true
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
    async handleHelp(msg, bot) {
        const chatId = msg.chat.id;
        
        const helpMessage = `üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n` +
            `/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n` +
            `/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n` +
            `/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n\n` +
            `üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É —Å –ø–æ–º–æ—â—å—é –ò–ò!`;
        
        const keyboard = {
            inline_keyboard: [
                [
                    { text: 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞', callback_data: 'start_bot' },
                    { text: '‚ÑπÔ∏è –û –±–æ—Ç–µ', callback_data: 'about_bot' }
                ],
                [
                    { text: 'üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings' }
                ]
            ]
        };
        
        bot.sendMessage(chatId, helpMessage, {
            reply_markup: keyboard
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /settings
    async handleSettings(msg, bot) {
        const chatId = msg.chat.id;
        
        const settingsMessage = `‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:\n\n` +
            `üîß –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ú–æ–¥—É–ª—å–Ω–∞—è\n` +
            `üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: src/modules/\n` +
            `ü§ñ –ò–ò: GigaChat API\n` +
            `üìä –†–µ–∂–∏–º: –ü–æ–ª–ª–∏–Ω–≥\n\n` +
            `–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª–µ config.js`;
        
        bot.sendMessage(chatId, settingsMessage);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    async handleRegularMessage(msg, bot) {
        const chatId = msg.chat.id;
        const text = msg.text;
        const userName = msg.from.first_name;
        
        logger.message(userName, text);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        bot.sendChatAction(chatId, 'typing');
        
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ GigaChat
            const aiResponse = await this.gigaChatService.sendMessage(text, userName);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
            bot.sendMessage(chatId, `ü§ñ **–û—Ç–≤–µ—Ç –ò–ò:**\n\n${aiResponse}`);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ GigaChat:', error.message);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            const errorMessage = `‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n${error.message}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`;
            bot.sendMessage(chatId, errorMessage);
        }
    }
}

module.exports = MessageHandler; 